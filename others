enableRowSelection: true, enableRowHeaderSelection: false, multiSelect:false




onRegisterApi: function (gridApi) { 
 gridApi.selection.on.rowSelectionChanged($scope, function (row) {
    
      localStorage.setItem('exposure'+row.limitSeqId, row)
    });
}};



$scope.onClickEdit = function(){
    console.log('$scope.selectedRow = ', $scope.selectedRow)
    if(!$scope.selectedRow){
     return;
    }

    window.open(window.location.origin+'/exposure/exposureLimitsMaintainanceAddReport.html?exposureId='+$scope.selectedRow.limitSeqId, '_self')

}







let item = JSON.parse(localStorage.getItem('exposure'))
console.log('item = ', item)
if(item && item.limitSeqId == exposureId){
  this.exposureLimitModel = item;

}






var row = {limitSeqId:'wwdwd'}

var url = window.location.href+"?exposureId="+row.limitSeqId

window.open(url,"_self")









$scope.onClickEdit = function(){
    console.log('$scope.selectedRow = ', $scope.selectedRow)
    if(!$scope.selectedRow){
     return;
    }

    window.open(window.location.origin+'/exposure/exposureLimitsMaintainanceAddReport.html?exposureId='+$scope.selectedRow.limitSeqId&mode='edit', '_self')

}



&mode='view'


if(item && item.mode){
  $scope.formMode = item.mode
}else{
 $scope.formMode = 'add'
}

ng-if="formMode == 'edit' || formMode == 'add'"


<span ng-if="formMode == 'view'"> {{exposureLimitModel.fundGrpId}} </span>

<span ng-if="formMode == 'view'"> {{exposureLimitModel.limitTypeCd}} </span>

<span ng-if="formMode == 'view'"> {{exposureLimitModel.limitId}} </span>

<span ng-if="formMode == 'view'"> {{exposureLimitModel.minExpoPct}} </span>

<span ng-if="formMode == 'view'"> {{exposureLimitModel.maxExpoPct}} </span>

<span ng-if="formMode == 'view'"> {{exposureLimitModel.minExpoDay}} </span>

<span ng-if="formMode == 'view'"> {{exposureLimitModel.maxExpoDay}} </span>





$scope.onClickNew = function(){
  $scope.exposureLimitModel = {


  }
  $scope.formMode = 'add';
}

$scope.onClickView = function(){
 
  $scope.formMode = 'view';
}



if(action == 'New'){
 $scope.exposureLimitModel.lastUpdatedby = $scope.user 

}

if(data.message){
  $scope.errorMessageModal.errorMessage = data.message

}else{


}


ng-if="formMode == 'view' || formMode == 'edit'"

delete $scope.exposureLimitModel.isActive
delete $scope.exposureLimitModel.dateTimeChanged








$http({

      method: 'DELETE',
      url: 'https://jsonplaceholder.typicode.com/users/' + user.id
       data: $scope.exposureLimitModel
    })


















fetch(url, { method: 'DELETE', body: JSON.stringify($scope.exposureLimitModel)})
    .then(async response => {
        const isJson = response.headers.get('content-type')?.includes('application/json');
        const data = isJson && await response.json();

        // check for error response
        if(data && data.message){
           $scope.errorMessageModal.errorMessage = data.message
           $('#responseModel').modal('show')
      }else{

          $scope.errorMessageModal.errorMessage = 'Record deleted'
           $('#responseModel').modal('show')
    }

    })
    .catch(error => {
          $scope.errorMessageModal.errorMessage = error.error
           $('#responseModel').modal('show')
        console.error('There was an error!', error);
    });




var header = new Headers();
myHeaders.append("Content-Type", "application/json");






if($scope.exposureLimitModel.name && $scope.exposureLimitModel.name.indexOf('GROUP')>=0){
    var ids = $scope.exposureLimitModel.name.slice($scope.exposureLimitModel.name.indexOf('GROUP')+5)
    ids = ids.split('_')
    console.log(ids)
    if(ids.indexOf($scope.exposureLimitModel.cumGrpMemId)>=0){
  $scope.exposureLimitModel.cumGrpMemId = ids;
}else{
    $scope.exposureLimitModel.cumGrpMemId = [$scope.exposureLimitModel.cumGrpMemId].concat(ids)

}

}


$scope.exposureLimitModel.cumGrpMemId = $scope.exposureLimitModel.cumGrpMemId.map(Number);







$scope.exposureLimitModel.cumGrpMemId = $scope.exposureLimitModel.cumGrpMemId.join(',')







$scope.getExposureDetails = function(){


            var url = 'https://mdn.github.io/learning-area/javascript/apis/fetching-data/can-store/products.json'
        $scope.loading = true
        

       $http.get(url)
        .then(function(data){
           $scope.limitName = data.allIndustories;
            $scope.limitName = $scope.limitName.map(function(item){   return [item,item]})
        },function(error){
            $scope.loading = false
            
        })
        




   }




$('#memberIds').val(['1', '2']);





